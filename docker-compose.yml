version: "3"

services:
  mysql8:
    image: mysql:8.0.23
    volumes:
      - ./docker/mysql8/data:/var/lib/mysql
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: gravityr
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
  postgres14:
    profiles: [all]
    image: postgres:14
    volumes:
      - ./docker/postgres14/data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: gravityr
      POSTGRES_USER: root
      POSTGRES_HOST_AUTH_METHOD: trust
    # Uncomment to see show all queries
    # command: ["postgres", "-c", "log_statement=all"]
    ports:
      - "5432:5432"
  aws_mock:
    profiles: [all]
    build:
      context: ./docker/aws_mock
    volumes:
      - ./docker/aws_mock/fastapi:/app
    ports:
      - "8080:8080"
  jaeger_mock:
    profiles: [all]
    build:
      context: ./docker/jaeger_mock
    volumes:
      - ./docker/jaeger_mock/mock:/app
    ports:
      - "16685:16685"
    restart: unless-stopped
  hasura2:
    profiles: [all]
    image: hasura/graphql-engine:v2.10.0
    ports:
      - "8081:8080"
    depends_on:
      - postgres14
    restart: unless-stopped
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://root:@postgres14:5432/gravityr
      HASURA_GRAPHQL_ENABLE_CONSOLE: 'true'
      HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey
  node:
    profiles: [all]
    build:
      context: ./docker/node
    command: ["tail", "-f", "/dev/null"]
    volumes:
      - ./docker/node/hasura:/hasura
    environment:
      HASURA_GRAPHQL_ENABLE_TELEMETRY: 'false'
      HASURA_GRAPHQL_ADMIN_SECRET: myadminsecretkey

