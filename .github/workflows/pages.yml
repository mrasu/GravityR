name: Deploy example content to Pages

on:
  workflow_run:
    workflows: ["Run tests"]
    types:
      - completed
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    timeout-minutes: 10
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - run: docker-compose up -d mysql8 postgres14 aws_mock
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'
          cache-dependency-path: 'client/yarn.lock'
      - run: yarn install
        working-directory: ./client
      - uses: actions/setup-go@v3
        with:
          go-version-file: 'go.mod'
          cache: true
      - run: make build
      - name: Wait for MySQL setup
        run: |
          while ! docker-compose exec -T mysql8 mysql -u root gravityr -e "SELECT 1" >/dev/null 2>&1; do
            echo "waiting for mysql setup..."
            sleep 1
          done
        timeout-minutes: 3
      - name: Wait for PostgreSQL setup
        run: |
          while ! docker-compose exec -T postgres14 psql -d gravityr -U root -c "SELECT 1" >/dev/null 2>&1; do
            echo "waiting for postgres setup..."
            sleep 1
          done
        timeout-minutes: 3
      - run: docker-compose up -d hasura2
      - name: Setup MySQL data
        run: docker-compose exec -T mysql8 mysql -u root gravityr < docker/mysql8/init/script.sql
      - name: Setup PostgreSQL data
        run: docker-compose exec -T postgres14 psql -d gravityr -U root -f - < docker/postgres14/init/script.sql
      - name: Setup Hasura metadata
        run: docker-compose exec -w /hasura -T node hasura metadata apply --skip-update-check
      - run: make example
      - name: Setup Pages
        uses: actions/configure-pages@v1
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: 'example'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@main
